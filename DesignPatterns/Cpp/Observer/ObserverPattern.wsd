@startuml ObserverPattern

skinparam Monochrome reverse

title Observer pattern for representing different forms of numbers

class NumberSubject
{
  + NumberSubject()
  + void addObserver(Observer*)
  + void notifyAllObservers()
  + int getNumber()
  + setNumber(int)
  --
  - std::vector<Observer*> observers
  - int number
}

class Observer
{
  + {abstract} void update()
  --
  - NumberSubject*
}

class BinaryObserver
{
  + BinaryObserver(NumberSubject*)
  + void update()
}

class OctalObserver
{
  + OctalObserver(NumberSubject*)
  + void update()
}

class DecimalObserver
{
  + DecimalObserver(NumberSubject*)
  + void update()
}

class HexObserver
{
  + HexObserver(NumberSubject*)
  + void update()
}

note top of NumberSubject : The client attaches the Subject to every Observer.
note top of NumberSubject : The client invokes getNumber() and setNumber() \
to update the subject, which then causes the Observers to update.

Observer <|-- BinaryObserver
Observer <|-- OctalObserver
Observer <|-- DecimalObserver
Observer <|-- HexObserver
Observer o-- NumberSubject

@enduml

