"""Solutions to first 100 Project Euler questions."""

def solveProblem1() -> int:
  """Problem 1 - Multiples of 3 and 5

  If we list all the natural numbers below 10 that are multiples of 3 or 5, we get
  3, 5, 6 and 9.

  The sum of these multiples is 23.

  Find the sum of all the multiples of 3 or 5 below 1000.

  :return: 233168
  """
  # [0, 1000)
  oneThousandNumbersList = list(range(1000))

  # Filter out numbers that are neither divisible by 3 nor 5
  toSum = filter(lambda x: x % 3 == 0 or x % 5 == 0, oneThousandNumbersList)

  return sum(list(toSum))

def solveProblem2() -> int:
  """Project Euler - Problem 2 Even Fibonacci numbers

  Each new term in the Fibonacci sequence is generated by adding the previous two
  terms. By starting with 1 and 2, the first 10 terms will be:

  1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

  By considering the terms in the Fibonacci sequence whose values do not exceed four
  million, find the sum of the even-valued terms.

  :return: None
  """
  return None

if __name__ == "__main__":
  import sys
  if len(sys.argv) <= 1:
    raise RuntimeError("Pass in the Project Euler problem numbers that you want to solve")
  else:
    for problemNumber in sys.argv[1:]:
      print(f"Answer to problem #{problemNumber}: {locals()['solveProblem' + problemNumber]()}")
